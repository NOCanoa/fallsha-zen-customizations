@media (prefers-reduced-motion: no-preference) {
    .tab-loading-burst {
      border-radius: inherit;
      position: relative;
      overflow: hidden;
  
      &::before {
        position: absolute;
        content: "";
        /* We set the width to be a percentage of the tab's width so that we can use
           the `scale` transform to scale it up to the full size of the tab when the
           burst occurs. We also need to set the margin-inline-start so that the
           center of the burst matches the center of the favicon. */
        width: 5%;
        height: 100%;
        /* Center the burst over the .tab-loading-burst; it's 9px from the edge thanks
           to .tab-content, plus 8px more since .tab-loading-burst is 16px wide. */
        margin-inline-start: calc(17px - 2.5%);
      }

  
      &[bursting]::before {
        content: "";
        position: absolute; /* Position it relative to the parent */
        top: 50%; 
        left: 0%; 
        width: 100px !important; /* Set an appropriate size for the pseudo-element */
        height: 100px !important; /* Match height to maintain aspect ratio */
        background-image: url("https://cdn.discordapp.com/attachments/1270101394531024918/1305244377672585237/fallensip_beeg.png?ex=6765bd8d&is=67646c0d&hm=34f7542e872a61424a048995fedc0109eef494816cb1939614a5ce46ab94f31e&") !important;
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        animation: tab-burst-animation-fallen 4s cubic-bezier(0, 0, 0.58, 1) forwards !important;
      }
      
  
      &[bursting][notselectedsinceload]::before {
        animation-name: tab-burst-animation-fallen !important;
      }
    }
  
    @keyframes tab-burst-animation {
        0% {
          opacity: 0.2;
          transform: translateX(0%);
        }
        100% {
          opacity: 0;
          transform: translateX(100%);
        }
      }     
  
      @keyframes tab-burst-animation-fallen {
        0% {
          transform: translate(-50%, -50%);
        }
        100% {
          transform: translate(50vw, -50%) translateX(100%); /* Move horizontally while scaling */
        }
      }    
  }